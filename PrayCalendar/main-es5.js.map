{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","datePipe","selectedDate","Date","displayMonth","getFullYear","getMonth","datesForMonth","displayMonthStr","transform","fillDatesFor","setMonth","year","month","firstDayDate","lastDayDate","daysInMonth","getDate","firstDay0Sun","getDay","firstDay","splice","length","dayCumulator","weekDays","index","push","onMinusDate","onPlusDate","selector","templateUrl","styles","AppModule","provide","useValue","useClass","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent {\n\n  selectedDate: Date = new Date();\n  displayMonth: Date = new Date(this.selectedDate.getFullYear(), this.selectedDate.getMonth());\n  displayMonthStr: string;\n  datesForMonth: number[][] = [];\n\n  constructor(private datePipe: DatePipe) {\n    this.displayMonthStr = datePipe.transform(this.displayMonth, 'MMMM, yyyy');\n\n    this.fillDatesFor(this.displayMonth.getFullYear(), this.displayMonth.getMonth());\n  }\n\n  onPlusDate() {\n    this.displayMonth.setMonth(this.displayMonth.getMonth() + 1);\n    this.displayMonthStr = this.datePipe.transform(this.displayMonth, 'MMMM, yyyy');\n    this.fillDatesFor(this.displayMonth.getFullYear(), this.displayMonth.getMonth());\n  }\n\n  onMinusDate() {\n    this.displayMonth.setMonth(this.displayMonth.getMonth() - 1);\n    this.displayMonthStr = this.datePipe.transform(this.displayMonth, 'MMMM, yyyy');\n    this.fillDatesFor(this.displayMonth.getFullYear(), this.displayMonth.getMonth());\n  }\n\n  // month 0 indexed\n  fillDatesFor(year: number, month: number) {\n    var firstDayDate = new Date(year, month, 1);\n    var lastDayDate = new Date(year, month + 1, 0);\n\n    var daysInMonth = lastDayDate.getDate();\n    var firstDay0Sun = firstDayDate.getDay();\n    var firstDay = firstDay0Sun == 0 ? 7 : firstDay0Sun;\n\n    this.datesForMonth.splice(0, this.datesForMonth.length);\n    var dayCumulator = 1;\n\n    var weekDays = [];\n    for (let index = 1; index < 8; index++) { // first week\n      if (firstDay > index) {\n        weekDays.push(null);\n      } else {\n        weekDays.push(dayCumulator++);\n      }\n    }\n    this.datesForMonth.push(weekDays);\n\n    for (let index = 2; index < 7; index++) { // weeks post first week\n      weekDays = [];\n      for (let index = 1; index < 8; index++) { // days\n        if (dayCumulator <= daysInMonth) {\n          weekDays.push(dayCumulator++);\n        } else {\n          break;\n        }\n      }\n      this.datesForMonth.push(weekDays);\n    }\n  }\n}\n","<div class=\"container-fluid h-100\" style=\"background-color: greenyellow;\">\n    <div class=\"d-flex flex-column h-100\">\n        <div class=\"\" style=\"background-color: orange;\">\n            <!-- calendar view -->\n            <div class=\"container\">\n                <div class=\"row\" style=\"background-color: red;\">\n                    <!-- date picker view -->\n                    <button class=\"col-2\"\n                            (click)=\"onMinusDate()\"\n                            style=\"background-color: blueviolet;\">\n                        < </button>\n                            <p class=\"col-8 text-center\">{{displayMonthStr}}</p>\n                            <button class=\"col-2\"\n                                    (click)=\"onPlusDate()\"\n                                    style=\"background-color: blueviolet;\"> > </button>\n                </div>\n            </div>\n\n            <!-- month view -->\n            <div class=\"\" style=\"background-color: cyan;\">\n                <table class=\"w-100\" style=\"background-color: moccasin;\">\n                    <thead class=\"text-center\">\n                        <tr>\n                            <th style=\"background-color: green;\">Mon</th>\n                            <th style=\"background-color: lightblue;\">Tue</th>\n                            <th style=\"background-color: green;\">Wed</th>\n                            <th style=\"background-color: lightblue;\">Thu</th>\n                            <th style=\"background-color: green;\">Fri</th>\n                            <th style=\"background-color: lightblue;\">Sat</th>\n                            <th style=\"background-color: green;\">Sun</th>\n                        </tr>\n                    </thead>\n\n                    <tbody class=\"text-center\">\n                        <tr *ngFor=\"let dateForMonth of datesForMonth\">\n                            <td>{{dateForMonth[0]}}</td>\n                            <td>{{dateForMonth[1]}}</td>\n                            <td>{{dateForMonth[2]}}</td>\n                            <td>{{dateForMonth[3]}}</td>\n                            <td>{{dateForMonth[4]}}</td>\n                            <td>{{dateForMonth[5]}}</td>\n                            <td>{{dateForMonth[6]}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n        <div class=\"flex-grow-1\" style=\"background-color: blue;\">\n            <!-- day info view -->\n\n        </div>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { DatePipe } from '@angular/common';\n\nimport { APP_BASE_HREF, LocationStrategy, HashLocationStrategy } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [\n    DatePipe,\n    { provide: APP_BASE_HREF, useValue: './' },\n    { provide: LocationStrategy, useClass: HashLocationStrategy }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}